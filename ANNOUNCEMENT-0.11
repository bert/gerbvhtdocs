Hola¡

Time for for the eleventh release of the Free Gerber Viewer, aka gerbv,
the "stable-as-a-rock" release. As you might note I have changed how
to enumerate the releases by dropping a zero and the release after
0.0.10 is thus 0.11.

If you zoomed in too much before it became evident that we abused the 
X-server quite heavy. That was because gerbv rendered the whole image
and saved it away in memory to allow quick panning. Computers started to
swap, the kernel started to kill of processes in random and GTK started
to send out SOS'es.

That is fixed in this release. Anders has added clipping, so only the 
image displayed on the screen is actually allocated. That has made it 
possible to zoom where no man has zoomed before. If you zoom too much 
(and I mean ridiculously too much) you can see strange thing start to 
happen, probably because integers start to wrap etc.

The setback of this is that when you pan you have to wait until the image
is redrawn again. A normal image is usually redrawn very quick, it's
only when you have many and big aperture macros it starts to get annoying.

To do this simple I just list the new and fixed stuff:
* GTK clipping as described above added.
* Two bugs in aperture macros fixed; one caused "multi macro" macros not
  to work properly and the other was related to primitive 20.
* The Debian build system discovered that I checked if unsigned were -1.
* Some cleanup/speedup when parsing Gerber by removing nested strncmp's
  with a switch/case.
* RS274D caused segfault.
* If %SR%, %SF% and %AS% are defined to their default values the compiler
  doesn't complain anymore. I still don't handle them if they are non
  default values.
* In some strange corner case we managed to sometimes get spurious lines
  showing up on the image.
* Strange drill files from Orcad386 handled better (we all know what Pitch 
  thinks about Orcad:-) ).
* Dino Ghilardi has contributed some code to be able to set the scale
  explicitly. That can be used when printing PNG's generated by gerbv.
  He has also written a text on how to actually get them out on the printer.
  It is in doc/PNG-print/PNGPrintMiniHowto.txt.

Comments, patches and suggestions are, as always, very welcome. We use 
the bug database and feature request database available through sourceforge. 
Have a look there if you curious what's going on or if you have any idea 
that you think should be implemented in gerbv.

Homepage for gerbv is still http://gerbv.sourceforge.net/ where a bug database,
a feature request database, the CVS and a commit mailinglist is available.

To download gerbv goto 
        http://prdownloads.sourceforge.net/gerbv/
and grab gerbv-0.11.tar.gz

To install the program do
1. gzip -dc gerbv-0.11.tar.gz | tar xf -
2. cd gerbv-0.11
3. ./configure
4. make install

Interesting configure options are:
--help             : Lists all options
--enable-batch     : Enable compilation of Guile/Scheme backends
--enable-exportpng : Enable compilation of export of PNGs
--prefix=<dir>     : Install from dir <prefix>
